int32_t Lmain();
int32_t LFac$ComputeFac(int32_t t2, int32_t t3);


int32_t Lmain() {
  int32_t t1;
  /* EXP(CALL(NAME(LL_println_int), CALL(NAME(LFac$ComputeFac), ESEQ(MOVE(TEMP(t1), MEM(CALL(NAME(LL_halloc), OP(*, CONST(0), CONST(4))))), TEMP(t1)), CONST(10)))) */
  int32_t t6 = (0 * 4);
  int32_t t7 = LL_halloc(t6);
  t1 = MEM(t7);
  int32_t t8 = t1;
  int32_t t9 = LFac$ComputeFac(t8, 10);
  int32_t t10 = t9;
  int32_t t11 = LL_println_int(t10);
  t11;
  return t0;
}

int32_t LFac$ComputeFac(int32_t t2, int32_t t3) {
  int32_t t0, t4, t5;
  /* SEQ(SEQ(CJUMP(==, ESEQ(SEQ(CJUMP(<, TEMP(t3), CONST(1), L$$3, L$$4), SEQ(LABEL(L$$3), SEQ(MOVE(TEMP(t5), CONST(1)), SEQ(JUMP(NAME(L$$5), [L$$5]), SEQ(LABEL(L$$4), SEQ(MOVE(TEMP(t5), CONST(0)), LABEL(L$$5)) ) ) ) ) ) , TEMP(t5)), CONST(1), L$$0, L$$1), SEQ(LABEL(L$$0), SEQ(MOVE(TEMP(t4), CONST(1)), SEQ(JUMP(NAME(L$$2), [L$$2]), SEQ(LABEL(L$$1), SEQ(MOVE(TEMP(t4), OP(*, TEMP(t3), CALL(NAME(LFac$ComputeFac), MEM(CONST(0)), OP(-, TEMP(t3), CONST(1))))), LABEL(L$$2)) ) ) ) ) ) , MOVE(TEMP(t0), TEMP(t4)))  */
  int32_t t12 = t3;
  if (t12 < 1) goto L$$3; else goto L$$4;
L$$3: ;
  t5 = 1;
  goto L$$5;
L$$4: ;
  t5 = 0;
L$$5: ;
  int32_t t13 = t5;
  if (t13 == 1) goto L$$0; else goto L$$1;
L$$0: ;
  t4 = 1;
  goto L$$2;
L$$1: ;
  int32_t t14 = t3;
  int32_t t15 = MEM(0);
  int32_t t16 = t3;
  int32_t t17 = (t16 - 1);
  int32_t t18 = LFac$ComputeFac(t15, t17);
  int32_t t19 = t18;
  t4 = (t14 * t19);
L$$2: ;
  t0 = t4;
  return t0;
}


